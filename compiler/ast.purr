language purr.core 0.1

module purr.core.ast where
  public (Module, Interface_Specifier, Name, Qualified_Name, Declaration, Field, Variant, Binding_Specifier, Method_Parameter,
          Method_Dispatch, Expression, Case, Pattern, Version)

  record Module { interface, metadata, declarations }
  record Interface_Specifier { name, version }
  record Name { name }
  record Qualified_Name { names }
  record Version { minor, major, patch }


  union Declaration
    case Record { name, fields }
    case Union { name, variants }
    case Public { bindings }
    case Use { interface, bindings }
    case Method { signature, parameters, body }
    # FIXME:
    case Annotation
    case Section

  
  record Field { name, contract, default }
  record Variant { tag, fields }
  record Binding_Specifier { name, alias }
  record Method_Parameter { name, dispatch, default }

  union Method_Dispatch
    case Any
    case Tag { expression }


  union Expression
    case Integer { sign, digits }
    case Decimal { sign, integer, decimal }
    case Rational { sign, numerator, denominator }
    case Integer_32bit { sign, digits }
    case Decimal_64bit { sign, integer, decimal }

    case Boolean { value }
    case Text { value }
    case Vector { items }

    case Closure { parameters, expression }
    case If { condition, consequent, alternate }
    case Let { name, value, expression }
    case New { structure, fields }
    case Dispatch { signature, arguments }
    case Call { callee, arguments }
    case Project { structure, field }
    case Variable { name }

    case Match { value, cases }


  record Case { pattern, constraint, expression }

  union Pattern
    case Any
    case Equals { expression }
    case Bind { name }
    case Unapply { extractor, fields }
    case Vector { items, spread }